// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 17.1.0 Build 590 10/25/2017 SJ Lite Edition"

// DATE "11/27/2020 16:00:36"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module AddSumDemo (
	cout,
	add_n,
	a,
	b,
	s);
output 	cout;
input 	add_n;
input 	[3:0] a;
input 	[3:0] b;
output 	[3:0] s;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \cout~output_o ;
wire \s[3]~output_o ;
wire \s[2]~output_o ;
wire \s[1]~output_o ;
wire \s[0]~output_o ;
wire \b[3]~input_o ;
wire \add_n~input_o ;
wire \a[3]~input_o ;
wire \b[2]~input_o ;
wire \a[2]~input_o ;
wire \b[1]~input_o ;
wire \a[1]~input_o ;
wire \a[0]~input_o ;
wire \b[0]~input_o ;
wire \inst|inst|inst5~0_combout ;
wire \inst|inst1|inst5~0_combout ;
wire \inst|inst2|inst5~0_combout ;
wire \inst|inst8~0_combout ;
wire \inst|inst3|inst7|1~0_combout ;
wire \inst|inst2|inst7|1~0_combout ;
wire \inst|inst1|inst7|1~combout ;
wire \inst|inst|inst7|1~0_combout ;


cycloneive_io_obuf \cout~output (
	.i(\inst|inst8~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\cout~output_o ),
	.obar());
// synopsys translate_off
defparam \cout~output .bus_hold = "false";
defparam \cout~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \s[3]~output (
	.i(\inst|inst3|inst7|1~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[3]~output .bus_hold = "false";
defparam \s[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \s[2]~output (
	.i(\inst|inst2|inst7|1~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[2]~output .bus_hold = "false";
defparam \s[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \s[1]~output (
	.i(\inst|inst1|inst7|1~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[1]~output .bus_hold = "false";
defparam \s[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \s[0]~output (
	.i(\inst|inst|inst7|1~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\s[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \s[0]~output .bus_hold = "false";
defparam \s[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \b[3]~input (
	.i(b[3]),
	.ibar(gnd),
	.o(\b[3]~input_o ));
// synopsys translate_off
defparam \b[3]~input .bus_hold = "false";
defparam \b[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \add_n~input (
	.i(add_n),
	.ibar(gnd),
	.o(\add_n~input_o ));
// synopsys translate_off
defparam \add_n~input .bus_hold = "false";
defparam \add_n~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \a[3]~input (
	.i(a[3]),
	.ibar(gnd),
	.o(\a[3]~input_o ));
// synopsys translate_off
defparam \a[3]~input .bus_hold = "false";
defparam \a[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \b[2]~input (
	.i(b[2]),
	.ibar(gnd),
	.o(\b[2]~input_o ));
// synopsys translate_off
defparam \b[2]~input .bus_hold = "false";
defparam \b[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \a[2]~input (
	.i(a[2]),
	.ibar(gnd),
	.o(\a[2]~input_o ));
// synopsys translate_off
defparam \a[2]~input .bus_hold = "false";
defparam \a[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \b[1]~input (
	.i(b[1]),
	.ibar(gnd),
	.o(\b[1]~input_o ));
// synopsys translate_off
defparam \b[1]~input .bus_hold = "false";
defparam \b[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \a[1]~input (
	.i(a[1]),
	.ibar(gnd),
	.o(\a[1]~input_o ));
// synopsys translate_off
defparam \a[1]~input .bus_hold = "false";
defparam \a[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \a[0]~input (
	.i(a[0]),
	.ibar(gnd),
	.o(\a[0]~input_o ));
// synopsys translate_off
defparam \a[0]~input .bus_hold = "false";
defparam \a[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \b[0]~input (
	.i(b[0]),
	.ibar(gnd),
	.o(\b[0]~input_o ));
// synopsys translate_off
defparam \b[0]~input .bus_hold = "false";
defparam \b[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst|inst5~0 (
// Equation(s):
// \inst|inst|inst5~0_combout  = (\b[0]~input_o  & (\a[0]~input_o )) # (!\b[0]~input_o  & ((\add_n~input_o )))

	.dataa(\a[0]~input_o ),
	.datab(\add_n~input_o ),
	.datac(gnd),
	.datad(\b[0]~input_o ),
	.cin(gnd),
	.combout(\inst|inst|inst5~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst|inst5~0 .lut_mask = 16'hAACC;
defparam \inst|inst|inst5~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst1|inst5~0 (
// Equation(s):
// \inst|inst1|inst5~0_combout  = (\a[1]~input_o  & ((\inst|inst|inst5~0_combout ) # (\b[1]~input_o  $ (\add_n~input_o )))) # (!\a[1]~input_o  & (\inst|inst|inst5~0_combout  & (\b[1]~input_o  $ (\add_n~input_o ))))

	.dataa(\b[1]~input_o ),
	.datab(\add_n~input_o ),
	.datac(\a[1]~input_o ),
	.datad(\inst|inst|inst5~0_combout ),
	.cin(gnd),
	.combout(\inst|inst1|inst5~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst1|inst5~0 .lut_mask = 16'hF660;
defparam \inst|inst1|inst5~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst2|inst5~0 (
// Equation(s):
// \inst|inst2|inst5~0_combout  = (\a[2]~input_o  & ((\inst|inst1|inst5~0_combout ) # (\b[2]~input_o  $ (\add_n~input_o )))) # (!\a[2]~input_o  & (\inst|inst1|inst5~0_combout  & (\b[2]~input_o  $ (\add_n~input_o ))))

	.dataa(\b[2]~input_o ),
	.datab(\add_n~input_o ),
	.datac(\a[2]~input_o ),
	.datad(\inst|inst1|inst5~0_combout ),
	.cin(gnd),
	.combout(\inst|inst2|inst5~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst2|inst5~0 .lut_mask = 16'hF660;
defparam \inst|inst2|inst5~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst8~0 (
// Equation(s):
// \inst|inst8~0_combout  = (\a[3]~input_o  & (!\inst|inst2|inst5~0_combout  & (\b[3]~input_o  $ (\add_n~input_o )))) # (!\a[3]~input_o  & (\inst|inst2|inst5~0_combout  & (\b[3]~input_o  $ (!\add_n~input_o ))))

	.dataa(\b[3]~input_o ),
	.datab(\add_n~input_o ),
	.datac(\a[3]~input_o ),
	.datad(\inst|inst2|inst5~0_combout ),
	.cin(gnd),
	.combout(\inst|inst8~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst8~0 .lut_mask = 16'h0960;
defparam \inst|inst8~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst3|inst7|1~0 (
// Equation(s):
// \inst|inst3|inst7|1~0_combout  = \b[3]~input_o  $ (\add_n~input_o  $ (\a[3]~input_o  $ (\inst|inst2|inst5~0_combout )))

	.dataa(\b[3]~input_o ),
	.datab(\add_n~input_o ),
	.datac(\a[3]~input_o ),
	.datad(\inst|inst2|inst5~0_combout ),
	.cin(gnd),
	.combout(\inst|inst3|inst7|1~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst3|inst7|1~0 .lut_mask = 16'h6996;
defparam \inst|inst3|inst7|1~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst2|inst7|1~0 (
// Equation(s):
// \inst|inst2|inst7|1~0_combout  = \add_n~input_o  $ (\b[2]~input_o  $ (\a[2]~input_o  $ (\inst|inst1|inst5~0_combout )))

	.dataa(\add_n~input_o ),
	.datab(\b[2]~input_o ),
	.datac(\a[2]~input_o ),
	.datad(\inst|inst1|inst5~0_combout ),
	.cin(gnd),
	.combout(\inst|inst2|inst7|1~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst2|inst7|1~0 .lut_mask = 16'h6996;
defparam \inst|inst2|inst7|1~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst1|inst7|1 (
// Equation(s):
// \inst|inst1|inst7|1~combout  = \add_n~input_o  $ (\b[1]~input_o  $ (\a[1]~input_o  $ (\inst|inst|inst5~0_combout )))

	.dataa(\add_n~input_o ),
	.datab(\b[1]~input_o ),
	.datac(\a[1]~input_o ),
	.datad(\inst|inst|inst5~0_combout ),
	.cin(gnd),
	.combout(\inst|inst1|inst7|1~combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst1|inst7|1 .lut_mask = 16'h6996;
defparam \inst|inst1|inst7|1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst|inst7|1~0 (
// Equation(s):
// \inst|inst|inst7|1~0_combout  = \a[0]~input_o  $ (\b[0]~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\a[0]~input_o ),
	.datad(\b[0]~input_o ),
	.cin(gnd),
	.combout(\inst|inst|inst7|1~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst|inst7|1~0 .lut_mask = 16'h0FF0;
defparam \inst|inst|inst7|1~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign cout = \cout~output_o ;

assign s[3] = \s[3]~output_o ;

assign s[2] = \s[2]~output_o ;

assign s[1] = \s[1]~output_o ;

assign s[0] = \s[0]~output_o ;

endmodule
